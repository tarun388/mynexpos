breakpoint;

//IDLE CODE
loadi(69,11);
//loadi(70,12);

//MODULE 7 BOOT
loadi(54,67);
loadi(55,68);

SP = 76*512 - 1;

//BOOT MODULE
call MOD_7;


//----------------------------IDLE PROCESS---------------------------

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

alias i R1;

i=0;
while (i < 20) do
	[PTBR + i] = -1;
	[PTBR + i + 1] = "0000";
	i = i+2;
endwhile;

//CODE
[PTBR+8] = 69;
[PTBR+9] = "0100";

//STACK
[PTBR+16] = 70;
[PTBR+17] = "0110";

[PROCESS_TABLE + 1] = 0;	//PID OF IDLE 0;
[PROCESS_TABLE + 3] = 0;	//userid --> kernel
[PROCESS_TABLE + 4] = RUNNING;	//STATE
[PROCESS_TABLE + 11] = 76;	//UAPN
[PROCESS_TABLE + 12] = 0;	//KPTR
[PROCESS_TABLE + 13] = 8*512;	//UPTR
[PROCESS_TABLE + 14] = PTBR;	//PTBR
[PROCESS_TABLE + 15] = PTLR;	//PTLR

[70*512] = [69*512+1];		//ENTRY POINT

//------------------------SWAPPER DAEMON----------------------------------------

PTBR = PAGE_TABLE_BASE + 20*15;
PTLR = 10;

i=0;
while (i < 20) do
	[PTBR + i] = -1;
	[PTBR + i + 1] = "0000";
	i = i+2;
endwhile;

//CODE
[PTBR+8] = 69;
[PTBR+9] = "0100";

//STACK
[PTBR+16] = 81;
[PTBR+17] = "0110";

[PROCESS_TABLE + 15*16 + 1] = 15;	//PID OF swapper daemon
[PROCESS_TABLE + 15*16 + 3] = 0;	//userid --> kernel
[PROCESS_TABLE + 15*16 + 4] = CREATED;	//STATE
[PROCESS_TABLE + 15*16 + 11] = 82;	//UAPN
[PROCESS_TABLE + 15*16 + 12] = 0;	//KPTR
[PROCESS_TABLE + 15*16 + 13] = 8*512;	//UPTR
[PROCESS_TABLE + 15*16 + 14] = PTBR;	//PTBR
[PROCESS_TABLE + 15*16 + 15] = PTLR;	//PTLR

[81*512] = [69*512+1];		//ENTRY POINT

//------------------------------------------------------------------
//---------------------------IDLE2---------------------------------------

PTBR = PAGE_TABLE_BASE + 280;
PTLR = 10;

i=0;
while (i < 20) do
	[PTBR + i] = -1;
	[PTBR + i + 1] = "0000";
	i = i+2;
endwhile;

//CODE
[PTBR+8] = 69;
[PTBR+9] = "0100";

//STACK
[PTBR+16] = 83;
[PTBR+17] = "0110";

[PROCESS_TABLE + 224 + 1] = 14;
[PROCESS_TABLE + 224 + 3] = 0;
[PROCESS_TABLE + 224 + 4] = RUNNING;
[PROCESS_TABLE + 224 + 11] = 84;		//UAPN
[PROCESS_TABLE + 224 + 12] = 0;		//KPTR
[PROCESS_TABLE + 224 + 13] = 8*512;	//UPTR
[PROCESS_TABLE + 224 + 14] = PTBR;	//PTBR
[PROCESS_TABLE + 224 + 15] = PTLR;	//PTLR 

[83*512] = [69*512+1];		//ENTRY POINT

//-----------------------------------------------------------------------
breakpoint;
//start;

SP = 8*512;
[SYSTEM_STATUS_TABLE + 1] = 0;		//CURRENT PID
PTBR = PAGE_TABLE_BASE;
PTLR = 10;
ireturn;
