//-----------------------------------------MODULE 8-----------------------------------------------------------
//-----------------------------------ACCESS CONTROL MODULE--------------------------------------------------

alias functionNum R1;

if (functionNum == ACQUIRE_KERN_LOCK) then

	alias curPID2 R3;
	//current process on secondary core
	curPID2 = [SYSTEM_STATUS_TABLE + 6];
	//chck for secondary core
	if (CORE == SECONDARY_CORE) then
		//paging on or logut initiated on primary core
		if (([SYSTEM_STATUS_TABLE + 5] != 0) || ([SYSTEM_STATUS_TABLE + 7] != 0)) then
			//set state of current process to ready
			[PROCESS_TABLE + (curPID2*16) + 4] = READY;

			//context switch
			backup;
			call MOD_5;
			restore;	
		endif;		
	endif;

	//spin lock
	//until var becomes free
	while (tsl(KERN_LOCK) == 1) do
		continue;
	endwhile;

//print(KERN_LOCK);
	return;
endif;

if (functionNum == ACQUIRE_SCHED_LOCK) then

	//spin lock
	//until var becomes free
	while (tsl(SCHED_LOCK) == 1) do
		continue;
	endwhile;

//print(SCHED_LOCK);
	return;
endif;

if (functionNum == RELEASE_LOCK) then

	alias LockVarAddress R2;
	//set 0 to the address
	[LockVarAddress] = 0;
//print(R2);
//print([R2]);
	return;	
endif;
